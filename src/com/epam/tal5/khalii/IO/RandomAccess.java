package com.epam.tal5.khalii.IO;

import java.io.IOException;
import java.io.RandomAccessFile;

import static java.lang.System.out;

/**
 * Created by Anhelina_Khalii on 29.04.2015.
 */
public class RandomAccess {

    public static final String sourceFileName= "sourse.txt";
    public static void main(String[] args) throws IOException {
        RandomAccessFile raf = new RandomAccessFile(sourceFileName,"rw");//обеспечивает чтение и запись данных в любом месте файла.
/*mode Ц режим открыти€ файла, может принимать значени€ ФrФ,ФrwФ,ФrwsФ,ФrwdФ.
«начени€ режимов открыти€ файла:

"r"ќткрывает файл только по чтению. «апуск любых методов записи данных приведет к выбросу исключени€ IOException.

"rw"ќткрывает файл по чтению и записи. ≈сли файл еще не создан, то осуществл€етс€ попытка создать его.

"rws"ќткрывает файл по чтению и записи подобно "rw", и также требует системе при каждом изменении содержимого файла или метаданных синхронно записывать эти изменени€ на основной носитель.

"rwd"ќткрывает файл по чтению и записи подобно "rws", но принуждает систему синхронно записывать изменени€ на основной носитель только при каждом изменении содержимого файла. ≈сли измен€ютс€ метаданные, синхронна€ запись не осуществл€етс€.

long getFilePointer()
¬озвращает текущую позицию указател€ файла.

int skipBytes(int n)
ќсуществл€ет попытку пропустить n байт. Ётот метод может пропустить гораздо меньше байт, возможно даже 0 байт. ѕодобна€ ситуаци€ может возникнуть в случае достижени€ конца файла до того как n байт будет пропущено Ц это одна из возможностей. Ётот метод никогда не выбрасывает EOFException. ¬озвратитс€ действительное количество пропущенных байтов. ≈сли n отрицательно, то байты не будут пропускатьс€.
 */

        out.println(raf.length());
        raf.seek(10);//ѕеремещает указатель файла на pos байтов от начала файла.
        String s=raf.readLine();
        out.println(s);
        raf.seek(raf.length());
        raf.writeUTF("ѕривет");
        raf.close();

    }
}
